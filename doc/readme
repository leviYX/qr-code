5.3 访问应用

注意，本DEMO后端服务需要与移动设备在同一个局域网下


打开浏览器，访问 http://ip:8080 进入Web端登录页面
在另一个浏览器窗口或标签页中打开 http://ip:8080/mobile.html 模拟移动端App，或者使用移动设备扫码二维码
在移动端页面中输入二维码ID或直接点击Web端页面提供的链接
按照界面提示完成扫码登录流程

六、扫码登录流程详解
整个扫码登录的流程如下：
6.1 二维码生成阶段

用户打开Web登录页面
前端请求后端生成唯一的二维码ID
后端生成二维码ID，初始状态为"等待扫描"
后端将二维码ID及状态存储到Redis
后端生成包含二维码ID的二维码图片并返回给前端
前端建立WebSocket连接，准备接收状态更新

6.2 扫描确认阶段

用户通过移动端App扫描二维码，获取二维码ID
移动端发送扫描请求到服务端
服务端更新二维码状态为"已扫描"
服务端通过WebSocket推送状态变更到Web端
Web端更新UI显示"已扫描"状态
移动端显示用户选择界面
用户在移动端选择要登录的账号并确认

6.3 登录完成阶段

移动端发送确认登录请求到服务端
服务端验证二维码状态，生成用户令牌
服务端更新二维码状态为"已确认"，并附带用户信息
服务端通过WebSocket推送登录成功信息到Web端
Web端接收到登录成功消息，获取用户信息
Web端完成登录流程，显示用户信息
移动端显示登录成功界面

七、安全性考虑
实际生产环境中，还需要考虑以下安全因素
7.1 二维码安全

短期有效：二维码应设置较短的有效期，本例中设置为300秒
一次性使用：登录成功后立即使二维码失效
状态验证：严格检查二维码状态的转换合法性
防止遍历攻击：使用足够长的随机UUID，避免被暴力破解

7.2 通信安全

HTTPS：生产环境必须启用HTTPS加密传输
WebSocket安全：考虑为WebSocket连接添加认证机制
防重放攻击：添加时间戳和nonce值防止请求重放
跨站点请求伪造(CSRF)防护：添加CSRF令牌验证

7.3 用户信息安全

敏感信息加密：Redis中存储的用户信息应该加密
令牌管理：实现完善的令牌生成、验证和过期机制
登录通知：当用户完成扫码登录时，向用户发送登录通知
异常监测：监测异常登录行为，如短时间内多次扫码

作者：风象南
链接：https://juejin.cn/post/7510543281224204351
来源：稀土掘金
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。